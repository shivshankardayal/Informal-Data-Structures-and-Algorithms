<d:preface version="5.0" xmlns:d="http://docbook.org/ns/docbook"
           xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:mml="http://www.w3.org/1998/Math/MathML">
  <?xml-stylesheet href="../css/style.css" type="text/css"?>
  <?dbhtml filename="preface/index.html" ?>
  <d:title>Preface</d:title>
  <d:para>
    This book is a natural successor of my C programming book. There is no
    about that data structures and algorithms is one of the most critical
    subjects in computer science. Computer programming has changed a lot in
    last few decades. Programmers typically do not implement basic data
    structures in real-world code but rather they use ready-made libraries
    which are of very high quality. However, that does not decrease the
    importance of the subject. The importance is same even though a lot in
    programming world has changed and there will be times when you would want
    to implement your own version of data structures and algorithms. Another
    point is that for a programmer this subject allows one to excercise his
    knowledge of programming language to various problems this subject offers.
    To really appreciate the library code you must know the inner working of
    the data strutcture and algorithm implemneted by that library.
  </d:para>
  <d:para>
    One of the critical learnings from this subject which you, the reader, will
    learn is complexity computation. I am sure that you will certainly
    appreciate the value of knowledge after learning it. I cannot put enough
    stress on the importance of data structures and algorithms. The application
    of data structures and algorithms is there in almost all branches of
    computer science without exception. Any program you write will involve some
    algorithm and data structure. The importance of data structure and
    algorithms can be found from the title of the book on the subject, written
    by one of the great programmers Niklaus Wirth who created several languages
    most famous being Pascal, <d:quote>Algorithms + Data Structures =
    Programs</d:quote>.
  </d:para>
  <d:sect1>
    <d:title>Why I wrote this book?</d:title>
    <d:para>
      I wrote this book for myself! There are a lot of excellent books which
      cover a lot of material but they are all spread and not put together. I
      have attempted to put what I have learned and learning in this book. Any
      other usage of this book is a side-effect which was not intended.
    </d:para>
  </d:sect1>
  <d:sect1>
    <d:title>How to read this book?</d:title>
    <d:para>
      As always start form beginning and try not to skip. Even if you know the
      topic try to read it through as you will learn somehting out of text
      written. If there is a mathematical problem then try to solve using pen
      and paper and if it is a programming problem then try to implement
      it. Without solving problems given in the book you will not go
      far. Problem solving is an essential activity no matter what subject you
      read and you will find the same advice in all the books. If you do not
      understand a topic then you can skip the material for time being and come
      later or take a break from studies go out and come back and try again.
    </d:para>
    <d:para>
      Certain chapters in the book will contain specific material dedicated to
      that particular topic. You can read those if you are solely interested in
      that topic and nothing else. This book contains a lot of code and you
      must read it else you will loose the implementation knowledge.
    </d:para>
  </d:sect1>
  <d:sect1>
    <d:title>Prerequisite</d:title>
    <d:para>
      I have wrote code using C programming language using <d:code>gcc</d:code>
      following C11 standards. Thus you should get fairly modern compiler. I
      would recommend one which comes with your GNU/Linux distribution
      
    </d:para>
  </d:sect1>
</d:preface>
